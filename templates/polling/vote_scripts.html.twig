<script type="text/javascript">
    const socket = new WebSocket("ws://localhost:3100/meeting_{{ meeting.hashId }}");
    //const socket = new WebSocket("ws://gpvoting.bolprzewlekly.pl:3100/meeting_{{ meeting.hashId }}");

    socket.onopen = function(e) {
        console.log("Connection established!");
    };


    function addMessage(name, message,type,votes,actions) {
        if(type==="vote")
        {
            let v_total=$('#votes_total').val();
            let a_total=$('#actions_total').val();
            var res = name.split("_");
            if(res[(res.length-1)]==="0")
            {
                let v_count=parseInt($('#votes_count').val())+parseInt(votes);
                let a_count=parseInt($('#actions_count').val())+parseInt(actions);
                $('#votes_count').val(v_count);
                $('#actions_count').val(a_count);
                $('#act_span').text(a_count);
                $('#vot_span').text(v_count);
                let v_p=(v_count/v_total)*100;
                v_p=v_p.toFixed(2);
                let a_p=(a_count/a_total)*100;
                a_p=a_p.toFixed(2);
                $('#act_span_total').text(a_p);
                $('#vot_span_total').text(v_p);
            }

            {% if meeting.secret %}
            let votes_count;
            let actions_count;
            let percent;
                switch (message) {
                    case 1:
                        votes_count=$('#progressOn_'+res[(res.length-1)]).data('votes');
                        actions_count=$('#progressOn_'+res[(res.length-1)]).data('actions');
                        votes_count=parseInt(votes_count)+parseInt(votes);
                        actions_count=parseInt(actions_count)+parseInt(actions);
                    {% if meeting.weight==1 %}
                        percent=(votes_count/v_total)*100;
                        percent=percent.toFixed(2);
                    {% else %}
                        percent=(actions_count/a_total)*100;
                        percent=percent.toFixed(2);
                    {% endif %}
                        $('#progressOn_'+res[(res.length-1)]).data('votes',votes_count).data('actions',actions_count)
                            .attr('aria-valuenow',percent).prop('title',percent+'%')
                            .css({'width':percent+'%'})
                    break;
                    case 0:
                        votes_count=$('#progressAgainst_'+res[(res.length-1)]).data('votes');
                        actions_count=$('#progressAgainst_'+res[(res.length-1)]).data('actions');
                        votes_count=parseInt(votes_count)+parseInt(votes);
                        actions_count=parseInt(actions_count)+parseInt(actions);
                    {% if meeting.weight==1 %}
                        percent=(votes_count/v_total)*100;
                        percent=percent.toFixed(2);
                    {% else %}
                        percent=(actions_count/a_total)*100;
                        percent=percent.toFixed(2);
                    {% endif %}
                        $('#progressAgainst_'+res[(res.length-1)]).data('votes',votes_count).data('actions',actions_count)
                            .attr('aria-valuenow',percent).prop('title',percent+'%')
                            .css({'width':percent+'%'})
                        break;
                    case 2:
                        votes_count=$('#progressHold_'+res[(res.length-1)]).data('votes');
                        actions_count=$('#progressHold_'+res[(res.length-1)]).data('actions');
                        votes_count=parseInt(votes_count)+parseInt(votes);
                        actions_count=parseInt(actions_count)+parseInt(actions);
                    {% if meeting.weight==1 %}
                        percent=(votes_count/v_total)*100;
                        percent=percent.toFixed(2);
                    {% else %}
                        percent=(actions_count/a_total)*100;
                        percent=percent.toFixed(2);
                    {% endif %}
                        $('#progressHold_'+res[(res.length-1)]).data('votes',votes_count).data('actions',actions_count)
                            .attr('aria-valuenow',percent).prop('title',percent+'%')
                            .css({'width':percent+'%'})
                        break;
                    default:
                        break;
                }
            {% endif %}
            $('#vote_'+name).addClass(getVoteColor(message));

            let a=parseInt($('.presence span.counter').text());
            let sum=parseInt($('.presence span.sum').text());
            a++;
            $('.presence span.counter').text(a);
            if (a==sum)
            {
                $('#gm-end-vote').prop('disabled',false);
            }

        }else if(type==="gm_management"){
            location.reload();
        }
    }

    function getVoteColor(vote){
        let _class="bg-";
        switch (vote) {
            case 1:
                _class+="success";
                break;
            case 0:
                _class+="danger";
                break;
            case 2:
                _class+="warning";
                break;
            default:
                _class+="lignt";
                break;
        }
        return _class;
    }

    socket.addEventListener("message", function(e) {
        try
        {
            const message = JSON.parse(e.data);
            addMessage(message.name, message.message,message.type,message.votes,message.actions);
        }
        catch(e)
        {
            // Catch any errors
        }
    });


    $('.btn-test-vote-start').on("click touch",function () {
        let url=$(this).data('href');
        if(confirm('{% trans %}Na pewno chcesz rozpocząć testowe głosowanie?{% endtrans %}'))
        {
            $.ajax({
                type: 'PATCH',
                url: url,
                processData: false,
                contentType: 'application/merge-patch+json',
            }).done(function (result) {
                if(result.status==="success")
                {
                    const message = {
                        name:"organizator",
                        message: "meeting_start_test",
                        type: 'gm_management'
                    }
                    socket.send(JSON.stringify(message));
                    location.reload();
                }
            });
        }
    })

    $('#gm-end-vote').on('click',function () {
        let url=$(this).data('href');
        if(confirm('{% trans %}Na pewno chcesz zakończyć obecne głosowanie?{% endtrans %}'))
        {
            $.ajax({
                type: 'PATCH',
                url: url,
                processData: true,
                contentType: 'application/merge-patch+json',
            }).done(function (result) {
                if(result.status==="success")
                {
                    const message = {
                        name:"organizator",
                        message: "vote_current_end",
                        type: 'gm_management'
                    }
                    socket.send(JSON.stringify(message));
                    addMessage(message.name, message.message,message.type);

                }
            });
        }
    })
    $(".btn-vote").on("click", function() {
        let url='{{ path('app_ajax_general_meeting_save',{slug:meeting.slug}) }}';
        let vote=$(this).data('vote');
        let aid='{% if participant is defined %}{{ participant.aid }}{% else %}A0{% endif %}'
        const message = {
            name: aid+'_{{ (active.active is defined ? active.active : '') }}',
            message: vote,
            type:'vote',
            votes: '{% if participant is defined %}{{ participant.votes }}{% else %}0{% endif %}',
            actions: '{% if participant is defined %}{{ participant.actions }}{% else %}0{% endif %}'
        };
        $.ajax({
            type: 'PATCH',
            url: url,
            data: JSON.stringify({user:aid,vote:vote}),
            processData: true,
            contentType: 'application/merge-patch+json',
        }).done(function (result) {
            if(result.status==="success")
            {
                socket.send(JSON.stringify(message));
                addMessage(message.name, message.message,message.type,message.votes,message.actions);
                $('.btn-vote').prop('disabled',true);
            }
        });
    });

    $('.btn-gm-begin').on('click touch',function () {
        let url=$(this).data('href');
        if(confirm('{% trans %}Na pewno chcesz rozpocząć to zgromadzenie?{% endtrans %}'))
        {
            $.ajax({
                type: 'PATCH',
                url: url,
                processData: false,
                contentType: 'application/merge-patch+json',
            }).done(function (result) {
                if(result.status==="success")
                {
                    const message = {
                        name:"organizator",
                        message: "meeting_start",
                        type: 'gm_management'
                    }
                    socket.send(JSON.stringify(message));
                    location.reload();
                }
            });
        }
    })

    $('.btn-gm-end').on('click touch',function () {
        let url=$(this).data('href');
        if(confirm('{% trans %}Na pewno chcesz zakończyć to zgromadzenie?{% endtrans %}'))
        {
            $.ajax({
                type: 'PATCH',
                url: url,
                processData: false,
                contentType: 'application/merge-patch+json',
            }).done(function (result) {
                if(result.status==="success")
                {
                    const message = {
                        name:"organizator",
                        message: "meeting_end",
                        type: 'gm_management'
                    }
                    socket.send(JSON.stringify(message));
                    location.reload();
                }
            });
        }
    })

    $('.btn-gm-reset').on('click touch',function () {
        let href=$(this).data('href');
        let hash=$(this).data('hash');
        let url=$(this).data('url');
        if(confirm('{% trans %}Na pewno chcesz rozpocząć od nowa to zgromadzenie?{% endtrans %}'))
        {
            $.ajax({
                type: 'PATCH',
                url: href,
                processData: false,
                contentType: 'application/merge-patch+json',
            }).done(function (result) {
                if(result.status==="success")
                {
                    const message = {
                        name:"organizator",
                        message: "meeting_start",
                        type: 'gm_management'
                    }
                    socket.send(JSON.stringify(message));
                    location.reload();
                }
            });
        }
    })

    $('.btn-gm-activate-vote').on('click',function(){
       let url=$(this).data('href');
       if(confirm('{% trans %}Na pewno chcesza aktywować głosowanie nad tą uchwałą?{% endtrans %}'))
       {
           activateVote(url);
       }
    });

    $('.btn-gm-repeat-vote').on('click',function(){
        let url=$(this).data('href');
        if(confirm('{% trans %}Na pewno chcesza powtórzyć głosowanie nad tą uchwałą?{% endtrans %}'))
        {
            activateVote(url);
        }
    });

    function activateVote(url) {
        $.ajax({
            type: 'PATCH',
            url: url,
            processData: false,
            contentType: 'application/merge-patch+json',
        }).done(function (result) {
            if(result.status==="success")
            {
                const message = {
                    name:"organizator",
                    message: "activate_vote",
                    type: 'gm_management'
                }
                socket.send(JSON.stringify(message));
                location.reload();
            }
        });
    }
</script>